services:
  kong:
    image: kong:3.9.0
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    volumes:
      - ./kong.yml:/usr/local/kong/declarative/kong.yml
    networks:
      - kong-business
    deploy:
      mode: replicated
      replicas: 1

  business-logic:
    image: business-logic
    depends_on:
      - io-service
    build: 
      dockerfile: FakeAcad.BusinessLogic/Dockerfile
      context: backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - kong-business
      - backend
    deploy:
      mode: replicated
      replicas: 1

  auth:
    image: auth
    depends_on:
      - io-service
    build:
      dockerfile: FakeAcad.AuthService/Dockerfile
      context: backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1

  io-service:
    image: io-service
    depends_on:
      - backend-app-db
    build:
      dockerfile: FakeAcad.IOManager/Dockerfile
      context: backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - io-database
      - backend
    deploy:
      mode: replicated
      replicas: 1

  backend-app-db:
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: fakeacad-db
      POSTGRES_PASSWORD: password
    volumes:
      - app-db-vol:/var/lib/postgresql/data
    networks:
      - io-database
    deploy:
      mode: replicated
      replicas: 1

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - 8002:80
    depends_on:
      - backend-app-db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-vol:/var/lib/pgadmin
    networks:
      - io-database
    deploy:
      mode: replicated
      replicas: 1

  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "10000:8000"
    volumes:
      - portainer-vol:/data
    networks:
      - agent
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
  kong-db-vol:
    driver: local
  app-db-vol:
    driver: local
  pgadmin-vol:
    driver: local
  portainer-vol:
    driver: local

networks:
  io-database:
    driver: overlay
  backend:
    driver: overlay
  kong-business:
    driver: overlay
  agent:
    driver: overlay
