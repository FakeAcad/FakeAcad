services:
  # Kong API services
  kong:
    image: kong:3.9.0
    depends_on:
      - kong-db
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    volumes:
      - ./kong.yml:/etc/kong/kong.yml:ro

  kong-migration:
    image: kong:3.9.0
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    restart: on-failure

  kong-db:
    image: postgres:13.2-alpine
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-db-vol:/var/lib/postgresql/data

  # Backend services
  business-logic:
    depends_on:
      - io-service
    build: 
      dockerfile: FakeAcad.BusinessLogic/Dockerfile
      context: backend

  auth:
    depends_on:
      - io-service
    build:
      dockerfile: FakeAcad.AuthService/Dockerfile
      context: backend

  io-service:
    depends_on:
      - backend-app-db
    build:
      dockerfile: FakeAcad.IOManager/Dockerfile
      context: backend

  backend-app-db:
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: fakeacad-db
      POSTGRES_PASSWORD: password
    volumes:
      - app-db-vol:/var/lib/postgresql/data

volumes:
  kong-db-vol:
    driver: local
  app-db-vol:
    driver: local

